// src/WalletSelector.tsx
import { useState } from "react";
import { Button, Menu, Modal, Typography } from "antd";
import {
  useWallet,
  WalletReadyState
} from "@aptos-labs/wallet-adapter-react";

// src/utils.ts
var truncateAddress = (address) => {
  if (!address)
    return;
  return `${address.slice(0, 6)}...${address.slice(-5)}`;
};

// src/WalletSelector.tsx
import { Fragment, jsx, jsxs } from "react/jsx-runtime";
var { Text } = Typography;
function WalletSelector() {
  const [walletSelectorModalOpen, setWalletSelectorModalOpen] = useState(false);
  const { connect, disconnect, account, wallets, connected } = useWallet();
  const onWalletButtonClick = () => {
    if (connected) {
      disconnect();
    } else {
      setWalletSelectorModalOpen(true);
    }
  };
  const onWalletSelected = (wallet) => {
    connect(wallet);
    setWalletSelectorModalOpen(false);
  };
  return /* @__PURE__ */ jsxs(Fragment, {
    children: [
      /* @__PURE__ */ jsx(Button, {
        className: "wallet-button",
        onClick: () => onWalletButtonClick(),
        children: connected ? truncateAddress(account == null ? void 0 : account.address) : "Connect Wallet"
      }),
      /* @__PURE__ */ jsx(Modal, {
        title: /* @__PURE__ */ jsx("div", {
          className: "wallet-modal-title",
          children: "Connect Wallet"
        }),
        centered: true,
        open: walletSelectorModalOpen,
        onCancel: () => setWalletSelectorModalOpen(false),
        footer: [],
        closable: false,
        children: !connected && /* @__PURE__ */ jsx(Menu, {
          children: wallets.map((wallet) => {
            return /* @__PURE__ */ jsx(Menu.Item, {
              onClick: wallet.readyState === WalletReadyState.Installed ? () => onWalletSelected(wallet.name) : () => window.open(wallet.url),
              children: /* @__PURE__ */ jsxs("div", {
                className: "wallet-menu-wrapper",
                children: [
                  /* @__PURE__ */ jsxs("div", {
                    className: "wallet-name-wrapper",
                    children: [
                      /* @__PURE__ */ jsx("img", {
                        src: wallet.icon,
                        width: 25,
                        style: { marginRight: 10 }
                      }),
                      /* @__PURE__ */ jsx(Text, {
                        className: "wallet-selector-text",
                        children: wallet.name
                      })
                    ]
                  }),
                  wallet.readyState === WalletReadyState.Installed ? /* @__PURE__ */ jsx(Button, {
                    className: "wallet-connect-button",
                    children: /* @__PURE__ */ jsx(Text, {
                      className: "wallet-connect-button-text",
                      children: "Connect"
                    })
                  }) : /* @__PURE__ */ jsx(Text, {
                    className: "wallet-connect-install",
                    children: "Install"
                  })
                ]
              })
            }, wallet.name);
          })
        })
      })
    ]
  });
}
export {
  WalletSelector
};
